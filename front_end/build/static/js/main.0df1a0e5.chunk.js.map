{"version":3,"sources":["Components/MainPage/MainPage.jsx","Components/LandingPage/signIn.jsx","Components/LandingPage/registrationForm.jsx","Components/LandingPage/landingPage.jsx","Components/ProfilePage/profilePage.jsx","Components/LandingPage/AuthLandingPage.jsx","Components/LandingPage/NavBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["newComment","postToUpdate","SignIn","props","state","userName","password","isLoggedIn","submitHandler","event","preventDefault","target","className","console","log","checkPassword","changeHandler","setState","name","value","usernameComponent","document","getElementById","passwordComponent","signInButton","axios","post","username","withCredentials","then","res","cookie","result","data","localStorage","setItem","setCustomValidity","error","this","to","pathname","property_id","property_id1","user","property_id2","id","property_id3","head","property_id4","userDetails","property_id5","posts","property_id7","onSubmit","noValidate","md","htmlFor","onChange","type","placeholder","required","width","color","href","fab","icon","React","Component","FormsPage","fname","email","zip","confirmpassword","signIn","checkAge","checkpassword","phone","age","dob","zipcode","userLogIn","currDate","Date","dateOfBirth","getFullYear","conpassword","checkUsername","userf","toString","userfb","substring","length","match","property_id8","property_id9","property_id10","size","pattern","LandingPage","get","persons","MainPage","loggedIn","newHeadline","followers","searchFollower","postsToShow","ready","ready1","editPost","editPostId","editComment","editCommentId","followerReady","searchArticleByAuthor","put","headline","logoutUser","removeFollower","evt","followerName","delete","following","articles","sortByDate","arr","sort","a","b","date","getTime","correctOrder","reverse","onNewPost","text","newPost","newposts","newChangePost","files","fd","FormData","append","onClear","addNewPost","submitHandlerComment","commentId","submitHandlerPostEdit","submitHandlerPostCommentEdit","commentToUpdate","handleChange","handlePostEdit","handlePostCommentEdit","changeHandlerFind","submitSearch","changeHandlerFindArtcile","submitSearchArticle","handleImageChange","avatar","myName","picture","toggleComments","postnumber","buttonname","sectionname","style","display","getFollowerHeadline","followerHeadline","src","String","alt","onClick","active","map","item","message","far","accept","slice","image","auth","pid","body","comments","item1","owner","commetId","ProfilePage","isLinked","unlinkedSuccessfully","checkIfUpdate","changeHandlerLinking","submitHandlerLinking","linkusername","passwordCoder","pass","s","k","curremail","undefined","test","currzipcode","zipCode","currpassword","unLinkAccount","currphone","onIconClick","AuthLandingPage","googleLogin","params","split","NavbarPage","isOpen","toggleCollapse","dark","expand","App","exact","path","render","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0df1a0e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {MDBRow,MDBInput,MDBIcon,MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCol,MDBListGroupItem, MDBListGroup,MDBMedia} from \"mdbreact\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n//import UserDetails from \"./userDetails\";\r\n//import Posts from \"./Posts\";\r\nimport axios from 'axios';\r\nvar newComment;\r\nvar postToUpdate;\r\nclass MainPage extends React.Component {\r\n    state = {\r\n        //ready:false,\r\n        loggedIn:false,\r\n        newHeadline:\"\",\r\n        followers:[],\r\n        searchFollower:\"\",\r\n        postsToShow:[],\r\n        ready:false,\r\n        ready1:false,\r\n        editPost:\"\",\r\n        editPostId:\"\",\r\n        editComment:\"\",\r\n        editCommentId:\"\",\r\n        followerReady:false,\r\n        searchArticleByAuthor:\"\"\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n\r\n    }\r\n    componentDidMount() {\r\n        //axios call to get all the followers.\r\n        axios.get('https://parliament-backend.herokuapp.com/following',{withCredentials:true})\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                this.setState({ followers:res.data.following, ready: true});\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n        //axios call to get the user headline.\r\n        axios.get('https://parliament-backend.herokuapp.com/avatar',{withCredentials:true})\r\n            .then((res) => {\r\n                this.setState({ picture:res.data.avatar});\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n        axios.get('https://parliament-backend.herokuapp.com/headline',{withCredentials:true})\r\n            .then((res) => {\r\n                this.setState({ username:res.data.username,\r\n                    headline:res.data.headline});\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n        //axios call to get user posts.\r\n        axios.get('https://parliament-backend.herokuapp.com/articles',{withCredentials:true})\r\n            .then((res) => {\r\n                console.log(res)\r\n                this.setState({ postsToShow:res.data.articles,ready1: true});\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    //Submit handler to user headline.\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n        axios.put('https://parliament-backend.herokuapp.com/headline',{ headline: this.state.newHeadline},{withCredentials:true})\r\n            .then((res) => {\r\n                this.setState({ headline:res.data.headline,});\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    //Change handler to user headline.\r\n    changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    //function to logout User.\r\n    logoutUser = () =>{\r\n        axios.put('https://parliament-backend.herokuapp.com/logout',{user:this.state.userName},{withCredentials:true})\r\n            .then((res) => {\r\n                console.log(res)\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    //function to remove follower.\r\n    removeFollower =(evt)=> {\r\n        let followerName = evt.target.id\r\n        console.log(followerName)\r\n        axios.delete('https://parliament-backend.herokuapp.com/following/'+followerName,{withCredentials:true})\r\n            .then((res) => {\r\n                console.log(res.data.following)\r\n                //this.setState({ followers:res.data.following,});\r\n                axios.get('https://parliament-backend.herokuapp.com/articles',{withCredentials:true})\r\n                    .then((res) => {\r\n                        console.log(res)\r\n                        this.setState({ postsToShow:res.data.articles,ready1: true});\r\n                        axios.get('https://parliament-backend.herokuapp.com/following',{withCredentials:true})\r\n                            .then((res) => {\r\n                                console.log(res.data)\r\n                                this.setState({ followers:res.data.following, ready: true});\r\n                            }, (error) => {\r\n                                console.log(error);\r\n                            });\r\n                    }, (error) => {\r\n                        console.log(error);\r\n                    });\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //function to sort the posts according date.\r\n    sortByDate = arr => {\r\n        console.log(\"Sorting\")\r\n        const sorter = (a, b) => {\r\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\r\n        }\r\n        //console.log(arr.sort(sorter))\r\n        arr.sort(sorter);\r\n    }\r\n\r\n    //reversing to get latest first.\r\n    correctOrder = arr =>{\r\n        arr.reverse();\r\n    }\r\n\r\n    //function to handle new Post.\r\n    onNewPost = () => {\r\n        axios.post('https://parliament-backend.herokuapp.com/article',{text:this.state.newPost},{withCredentials:true})\r\n            .then((res) => {\r\n                let newposts  = res.data.articles;\r\n                console.log(\"Below  is new posts after New Post\")\r\n                console.log(newposts)\r\n                this.setState({ postsToShow:newposts});\r\n                console.log(\"Below is new state of postsToShow\")\r\n                console.log(this.state.postsToShow)\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n        \r\n    }\r\n    \r\n    newChangePost =(event)=>{\r\n\r\n        event.preventDefault();\r\n        console.log(event.target.files[0]);\r\n        console.log()\r\n        const fd = new FormData()\r\n        fd.append('text', this.state.newPost)\r\n        fd.append(\"image\", event.target.files[0])\r\n        axios.post(\"https://parliament-backend.herokuapp.com/article/image\",fd,{withCredentials:true})\r\n            .then((res) => {\r\n                let newposts  = res.data.articles;\r\n                console.log(\"Below  is new posts after New Post\")\r\n                console.log(newposts)\r\n                this.setState({ postsToShow:newposts});\r\n                console.log(\"Below is new state of postsToShow\")\r\n                console.log(this.state.postsToShow)\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n\r\n\r\n    }\r\n\r\n    //Clearing the new post area.\r\n    onClear = () => {\r\n        document.getElementById(\"newPost\").value=\"\";\r\n    }\r\n\r\n    //New Post text changing state.\r\n    addNewPost = (evt) => {\r\n\r\n        evt.preventDefault();\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n\r\n    }\r\n\r\n    //Submit handler for adding new comment.\r\n    submitHandlerComment = (event) => {\r\n        event.preventDefault();\r\n        postToUpdate = postToUpdate.substring(10,postToUpdate.length)\r\n        axios.put('https://parliament-backend.herokuapp.com/articles/'+postToUpdate,{ text: newComment, commentId : -1},{withCredentials:true})\r\n            .then((res) => {\r\n                let newposts  = res.data.articles;\r\n                this.setState({ postsToShow:newposts});\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    //Submit handler for editing existing post.\r\n    submitHandlerPostEdit = (event) => {\r\n        event.preventDefault();\r\n        postToUpdate = this.state.editPostId.substring(8,this.state.editPostId.length)\r\n        axios.put('https://parliament-backend.herokuapp.com/articles/'+postToUpdate,{ text: this.state.editPost},{withCredentials:true})\r\n            .then((res) => {\r\n                let newposts  = res.data.articles;\r\n                this.setState({ postsToShow:newposts});\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    //Submit handler for editing existing comment.\r\n    submitHandlerPostCommentEdit = (event) => {\r\n        event.preventDefault();\r\n        let commentToUpdate = this.state.editCommentId.substring(11,this.state.editCommentId.length)\r\n        let postToUpdate = this.state.editPostId.substring(11,this.state.editPostId.length)\r\n        axios.put('https://parliament-backend.herokuapp.com/articles/'+postToUpdate,{ text: this.state.editComment, commentId:commentToUpdate},{withCredentials:true})\r\n            .then((res) => {\r\n                let newposts  = res.data.articles;\r\n                this.setState({ postsToShow:newposts});\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    //Change handler for adding new comment.\r\n    handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        newComment = evt.target.value;\r\n        postToUpdate = evt.target.id;\r\n    }\r\n\r\n    //Submit handler for editing existing post.\r\n    handlePostEdit = (evt) => {\r\n        evt.preventDefault();\r\n        this.setState({\r\n            editPost: evt.target.value,\r\n            editPostId: evt.target.id\r\n        })\r\n    }\r\n\r\n    //Submit handler for editing existing comment.\r\n    handlePostCommentEdit = (evt) => {\r\n        evt.preventDefault();\r\n        this.setState({\r\n            editComment: evt.target.value,\r\n            editCommentId: evt.target.id,\r\n            editPostId: evt.target.name\r\n        })\r\n    }\r\n\r\n    //handler for finding user to follower.\r\n    changeHandlerFind = (evt) => {\r\n        evt.preventDefault();\r\n        this.setState({\r\n            searchFollower: evt.target.value,\r\n        })\r\n    }\r\n\r\n    //submit handler to add the follower\r\n    submitSearch = (evt) => {\r\n        evt.preventDefault();\r\n        axios.put('https://parliament-backend.herokuapp.com/following/'+this.state.searchFollower,{ text: this.state.editComment},{withCredentials:true})\r\n            .then((res) => {\r\n                //this.setState({ followers:res.data.following,});\r\n                axios.get('https://parliament-backend.herokuapp.com/articles',{withCredentials:true})\r\n                    .then((res) => {\r\n                        console.log(res)\r\n                        this.setState({ postsToShow:res.data.articles,ready1: true});\r\n                        axios.get('https://parliament-backend.herokuapp.com/following',{withCredentials:true})\r\n                            .then((res) => {\r\n                                console.log(res.data)\r\n                                this.setState({ followers:res.data.following, ready: true});\r\n                            }, (error) => {\r\n                                console.log(error);\r\n                            });\r\n                    }, (error) => {\r\n                        console.log(error);\r\n                    });\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    changeHandlerFindArtcile = (evt) => {\r\n        evt.preventDefault();\r\n        this.setState({\r\n            searchArticleByAuthor: evt.target.value,\r\n        })\r\n    }\r\n\r\n    //submit handler to add the follower\r\n    submitSearchArticle = (evt) => {\r\n        evt.preventDefault();\r\n        axios.get('https://parliament-backend.herokuapp.com/articles/'+this.state.searchArticleByAuthor,{withCredentials:true})\r\n            .then((res) => {\r\n                this.setState({ postsToShow:res.data.articles,ready1: true})\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    handleImageChange =(event)=>{\r\n        event.preventDefault();\r\n        console.log(event.target.files[0]);\r\n        console.log()\r\n        const fd = new FormData()\r\n        //fd.append('text', message)\r\n        fd.append(\"image\", event.target.files[0])\r\n        axios.put(\"https://parliament-backend.herokuapp.com/avatar\",fd,{withCredentials:true})\r\n            .then((res) => {\r\n                console.log(res)\r\n                axios.get('https://parliament-backend.herokuapp.com/avatar',{withCredentials:true})\r\n                    .then((res) => {\r\n                        console.log(res.data)\r\n                        console.log(res.data.avatar)\r\n                        var myName = res.data.avatar;\r\n                        console.log('\"' + myName + '\"');\r\n                        this.setState({picture:res.data.avatar});\r\n                    }, (error) => {\r\n                        console.log(error);\r\n                    });\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    toggleComments = (evt) =>{\r\n        console.log(evt.target.value)\r\n        let postnumber = evt.target.name\r\n        console.log(postnumber)\r\n        let buttonname = \"toggelCommentSection\"+postnumber\r\n        console.log(buttonname)\r\n        let sectionname = \"comment_section\" + postnumber\r\n        console.log(sectionname)\r\n        if(evt.target.value === 'Show Comments'){\r\n            document.getElementById(sectionname).style.display='block'\r\n            document.getElementById(buttonname).value = 'Hide'\r\n        }\r\n        else{\r\n            console.log(\"Inside Show if\")\r\n            document.getElementById(sectionname).style.display='none'\r\n            document.getElementById(buttonname).value = 'Show Comments'\r\n        }\r\n\r\n    }\r\n    getFollowerHeadline =(username)=> {\r\n        console.log(\"getting follower headline\")\r\n        axios.get('https://parliament-backend.herokuapp.com/headline/'+username,{withCredentials:true})\r\n            .then((res) => {\r\n                console.log(res.data.headline)\r\n                let followerHeadline=res.data.headline\r\n                this.setState({\r\n                    followerReady:true\r\n                })\r\n                return followerHeadline;\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    render() {\r\n\r\n        return(\r\n\r\n           <div className=\"row\">\r\n                <div className=\"col-md-3\" id=\"userDetails\">\r\n                    <div>\r\n                        <MDBCol>\r\n                            <MDBCard style={{ width: \"21rem\"}}>\r\n                                <img className=\"img-fluid\" src={String(this.state.picture)} alt={\"User avatar\"}/>\r\n                                {this.state.ready ? <MDBCardBody>\r\n                                    <MDBCardTitle>{this.state.username}</MDBCardTitle>\r\n                                    <MDBCardText id=\"headline\">\r\n                                        <h5>{this.state.headline}</h5>\r\n                                    </MDBCardText>\r\n                                    <div className=\"sm-form\" size=\"sm\">\r\n                                        <form className=\"needs-validation\"\r\n                                              onSubmit={this.submitHandler}\r\n                                              noValidate>\r\n                                            <MDBIcon icon=\"edit\" />\r\n                                            <input  value={this.state.newHeadline} name=\"newHeadline\" onChange={this.changeHandler} type=\"text\" id=\"newHeadline\" className=\"form-control\" placeholder=\"Enter New Headline\" />\r\n                                            <div className=\"text-center mt-4\">\r\n                                                <MDBInput color=\"indigo\" type=\"submit\" value=\"Update Headline\"/>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <br/>\r\n                                    <h4>\r\n                                        <MDBIcon icon=\"book-reader\" />\r\n                                    <Link to={{\r\n                                        pathname: \"/ProfilePage\",\r\n                                    }}\r\n                                    ><strong>Profile</strong></Link></h4>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <h6><MDBIcon icon=\"sign-out-alt\" />\r\n                                    <a onClick={this.logoutUser} href={\"/\"}>Logout</a></h6>\r\n                                </MDBCardBody> : null }\r\n                            </MDBCard>\r\n                            <br/>\r\n                            <MDBListGroup style={{ width: \"21rem\" }}>\r\n                                <MDBListGroupItem active aria-current='true'>\r\n                                    Following\r\n                                </MDBListGroupItem>\r\n                                {this.state.ready ?\r\n\r\n                                    <div className=\"Container\">\r\n                                        <h2><MDBIcon icon=\"user-friends\" /></h2>\r\n                                        {this.state.followers.map(item => (\r\n                                              item ?  <div>\r\n                                                    <MDBListGroupItem>\r\n                                                        <img src={String(item.picture)} width={400} alt={\"Follower avatar\"} className=\"img-thumbnail\"/>\r\n                                                        <br/>\r\n                                                        <br/>\r\n                                                        <h5><p>{item.username}</p>\r\n                                                        <p>{item.message}</p>\r\n                                                            <MDBIcon icon=\"user-minus\" id = {item} onClick={this.removeFollower} />\r\n                                                        </h5>\r\n                                                    </MDBListGroupItem>\r\n                                                </div> : null\r\n                                            )\r\n                                        )\r\n                                        }\r\n                                    </div> : null\r\n                                }\r\n                            </MDBListGroup>\r\n                            <br/>\r\n                            <br/>\r\n                            <MDBCol md = \"10\">\r\n                                <h1><MDBIcon far icon=\"address-book\" /></h1>\r\n                            Search Friends to Follow\r\n                                <br/>\r\n                            <form id=\"searchUserform\" className=\"needs-validation\" onSubmit={this.submitSearch} noValidate>\r\n                                <input value={this.state.searchFollower} name=\"searchFollower\" onChange={this.changeHandlerFind} type=\"text\" id=\"inputForUserFind\" className=\"form-control\" placeholder=\"Please Enter Full username\" width={20}/>\r\n                                <h7><i>Click Below icon to Search</i></h7>\r\n                                <h5><MDBIcon onClick={this.submitSearch} icon=\"search\"/></h5>\r\n                            </form>\r\n                        </MDBCol>\r\n                        </MDBCol>\r\n                    </div>\r\n\r\n                </div>\r\n               <div className=\"col-md-1\"></div>\r\n                    <div className=\"col-md-18\" id=\"userPosts\">\r\n                    {/*<Posts/>*/}\r\n                        <div className=\"row\">\r\n                            <div className=\"Container\">\r\n                                <MDBCard>\r\n                                    <MDBCardBody>\r\n                                        <MDBRow>\r\n                                            <MDBCol md=\"6\">\r\n                                                <div className=\"input-group\">\r\n                                                    <div className=\"custom-file\">\r\n                                                        <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" accept=\"image/*\" onChange={this.newChangePost}/>\r\n                                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                            Choose file\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </MDBCol>\r\n                                            <MDBCol md=\"6\" className=\"mb-6\">\r\n                                                <textarea id=\"newPost\" className=\"md-textarea form-control\" name=\"newPost\" value={this.state.newPost} placeholder=\"Enter New Post\" onChange={this.addNewPost}></textarea>\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                        <MDBRow>\r\n                                            <MDBCol md=\"3\" className=\"mb-2\">\r\n                                                <h2><MDBIcon icon=\"envelope\" onClick={this.onNewPost} /></h2>\r\n                                                <small><i>Click this icon to Post</i></small>\r\n                                                {/*<MDBInput type=\"submit\" onClick={this.onNewPost} value=\"Post\" size=\"sm\"/>*/}\r\n                                            </MDBCol>\r\n                                            <MDBCol md=\"3\" className=\"mb-2\">\r\n                                                <h2><MDBIcon  onClick={this.onClear} icon=\"eraser\" /></h2>\r\n                                                <small><i>Click this icon to erase post text</i></small>\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                    </MDBCardBody>\r\n                                </MDBCard>\r\n                                <br/>\r\n                                <br/>\r\n                                <MDBCol md=\"6\">\r\n\r\n                                    <form id=\"searchform\" className=\"needs-validation\" onSubmit={this.submitSearchArticle} noValidate>\r\n                                        <input value={this.state.searchArticleByAuthor} name=\"find\" onChange={this.changeHandlerFindArtcile} type=\"text\" id=\"defaultFormRegisterNameEx\" className=\"form-control\" placeholder=\"Enter Title or Author\" width={40}/>\r\n                                        <small><i>Click Below icon to Search</i></small>\r\n                                        <h5><MDBIcon onClick={this.submitSearchArticle} type=\"submit\" icon=\"search\"/></h5>\r\n                                        <div className=\"valid-feedback\">Looks good!</div>\r\n                                            {/*<MDBInput color=\"primary\" icon=\"search\" type=\"submit\" size=\"sm\"><MDBIcon type=\"submit\" icon=\"search\"/></MDBInput>*/}\r\n                                    </form>\r\n                                </MDBCol>\r\n                                {this.state.ready1 ?\r\n                                    <div id=\"userposts\">\r\n                                        {(this.sortByDate(this.state.postsToShow))}\r\n                                        {this.correctOrder(this.state.postsToShow)}\r\n                                        { this.state.postsToShow.slice(0,10).map(item =>\r\n                                            <div>\r\n                                                <MDBCol md=\"6\" >\r\n                                                    {/*{console.log(item)}*/}\r\n                                                    <MDBCard style={{ width: \"40rem\"}}>\r\n                                                        {item.image ? <img src={String(item.image)} alt={\"Post avatar\"}/> : null}\r\n                                                        <MDBCardBody>\r\n                                                            <h5><p className=\"text-left\">{item.text}</p></h5>\r\n                                                                <p className=\"text-right\">From : {item.auth}</p>\r\n                                                                <p className=\"text-right\" >@ {item.date}</p>\r\n\r\n                                                            <br/>\r\n                                                            <MDBRow>\r\n                                                                <MDBCol md=\"4\">\r\n                                                                    <h3><MDBIcon far icon=\"comment\" /></h3>\r\n                                                                    <form className=\"needs-validation\"\r\n                                                                          onSubmit={this.submitHandlerComment}\r\n                                                                          noValidate>\r\n                                                                        <input  value={item.id} onChange={this.handleChange} name={\"newComment\"+item.pid}  type=\"text\" id={\"newComment\"+item.pid} className=\"form-control\" placeholder=\"Enter New Comment\" />\r\n                                                                        <div className=\"text-center mt-4\">\r\n                                                                            <MDBInput color=\"indigo\" type=\"submit\" value=\"Comment\"/>\r\n                                                                        </div>\r\n                                                                    </form>\r\n                                                                </MDBCol>\r\n                                                                <MDBCol md=\"4\">\r\n                                                                    <h3><MDBIcon icon=\"edit\" /></h3>\r\n                                                                        <form className=\"needs-validation\"\r\n                                                                              onSubmit={this.submitHandlerPostEdit}\r\n                                                                              noValidate>\r\n                                                                            <input  value={item.id} onChange={this.handlePostEdit} name={\"editText\"+item.pid}  type=\"text\" id={\"editText\"+item.pid} className=\"form-control\" placeholder=\"Edit Post Text\" />\r\n                                                                            <div className=\"text-center mt-4\">\r\n                                                                                <MDBInput color=\"indigo\" type=\"submit\" value=\"Edit\"/>\r\n                                                                            </div>\r\n                                                                        </form>\r\n                                                                </MDBCol>\r\n                                                                <MDBCol md=\"8\">\r\n                                                                    <h3><MDBIcon far icon=\"comments\" /></h3>\r\n                                                                    <MDBInput id={\"toggelCommentSection\"+item.pid} name={item.pid} value=\"Show Comments\" type=\"submit\" onClick={this.toggleComments}></MDBInput>\r\n                                                                    <MDBMedia body id={\"comment_section\"+item.pid} style={{display:'none'}}>\r\n                                                                        {item.comments.map(item1 => (\r\n                                                                            <div>\r\n                                                                                <MDBIcon far icon=\"comment\" />\r\n                                                                                <p id={item1.commentId}> <i>{item1.owner} </i> said {item1.text}</p>\r\n                                                                                <MDBCol md=\"4\">\r\n                                                                                <div className=\"sm-form\" size=\"sm\">\r\n                                                                                    <form className=\"needs-validation\" onSubmit={this.submitHandlerPostCommentEdit} noValidate>\r\n                                                                                        <input  value={item1.commetId} onChange={this.handlePostCommentEdit} name={\"editComment\"+item.pid}  type=\"text\" id={\"editComment\"+item1.commentId} className=\"form-control\" placeholder=\"Edit Comment Text\" />\r\n                                                                                        <div className=\"text-center mt-4\">\r\n                                                                                            <MDBInput color=\"indigo\" type=\"submit\" value=\"Edit\"/>\r\n                                                                                        </div>\r\n                                                                                    </form>\r\n                                                                                </div>\r\n                                                                                </MDBCol>\r\n                                                                            </div>\r\n                                                                        ))}\r\n                                                                    </MDBMedia>\r\n                                                                </MDBCol>\r\n                                                            </MDBRow>\r\n                                                        </MDBCardBody>\r\n                                                    </MDBCard>\r\n                                                </MDBCol>\r\n                                                <br/>\r\n                                            </div>\r\n                                        )\r\n                                            // )\r\n                                        }\r\n                                    </div>\r\n                                    : null}\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport {MDBRow, MDBCol,MDBInput,MDBIcon} from \"mdbreact\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nexport class SignIn extends React.Component {\r\n\r\n    state = {\r\n        userName: \"\",\r\n        password: \"\",\r\n        isLoggedIn: false\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n\r\n    }\r\n    submitHandler = event => {\r\n        //Done for Testing Purpose\r\n        event.preventDefault();\r\n        event.target.className += \" was-validated\";\r\n        console.log(this.state);\r\n        this.checkPassword();\r\n    };\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoggedIn:false\r\n        })\r\n    }\r\n\r\n    changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    checkPassword = () => {\r\n        let usernameComponent = document.getElementById(\"signInUserName\")\r\n        let passwordComponent = document.getElementById(\"signInPassword\")\r\n        let signInButton = document.getElementById(\"signInButton\")\r\n        // // console.log(\"These are the userDetails\"+ this.props.userDetails);\r\n        // // console.log(\"This is value of show\" + this.state.show)\r\n        // console.log(this.state.userName)\r\n        // console.log(this.props.userDetails)\r\n        axios.post('https://parliament-backend.herokuapp.com/login', {\r\n            username: this.state.userName,\r\n            password: this.state.password\r\n        },{withCredentials:true})\r\n            .then((res) => {\r\n                console.log(document.cookie)\r\n                console.log(res);\r\n                const result = res.data;\r\n                //this.setState({ persons });\r\n                //console.log(persons)\r\n                console.log(res)\r\n                if(result.result==='success'){\r\n                    localStorage.setItem(\"token\",\"loggedIn\")\r\n                    this.setState({ isLoggedIn:true})\r\n                    console.log(document.cookie)\r\n                }\r\n                else{\r\n                    usernameComponent.setCustomValidity(\"User not Found\");\r\n                    passwordComponent.setCustomValidity(\"Incorrect Username or Password\");\r\n                    signInButton.setCustomValidity(\"Try Again\");\r\n                    console.log(\"Incorrect username or password\")\r\n                }\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n        // axios.post('http://127.0.0.1:3000/login',{username:'avss',password:'asdfas'})\r\n        //     .then(res => {\r\n        //         const result = res.data;\r\n        //         //this.setState({ persons });\r\n        //         //console.log(persons)\r\n        //         console.log(res.data)\r\n        //         if(result.result=='success'){\r\n        //             localStorage.setItem(\"token\",\"loggedIn\")\r\n        //             this.setState({ isLoggedIn:true})\r\n        //         }\r\n        //         else{\r\n        //             passwordComponent.setCustomValidity(\"Incorrect Username or Password\");\r\n        //             signInButton.setCustomValidity(\"Try Again\")\r\n        //\r\n        //         }\r\n        //     })\r\n        //if(re)\r\n        // this.props.userDetails.some(person => {\r\n        //     console.log(person.username)\r\n        //     if(person.username===this.state.userName)\r\n        //     {\r\n        //         if(person.address.street===this.state.password)\r\n        //         {\r\n        //             console.log(\"Login Successful\");\r\n        //             localStorage.setItem(\"token\",\"loggedIn\")\r\n        //             this.setState({\r\n        //                 isLoggedIn:true,\r\n        //                 userName:person.username,\r\n        //                 user:person.name,\r\n        //                 id:person.id,\r\n        //                 head:person.company.catchPhrase,\r\n        //\r\n        //             })\r\n        //             return true\r\n        //         } else {\r\n        //             passwordComponent.setCustomValidity(\"Incorrect Password\");\r\n        //             signInButton.setCustomValidity(\"Try Again\")\r\n        //             //return true\r\n        //         }\r\n        //\r\n        //     }\r\n        //     else {\r\n        //         usernameComponent.setCustomValidity(\"User not Found\");\r\n        //        passwordComponent.setCustomValidity(\"Incorrect Password\");\r\n        //        signInButton.setCustomValidity(\"Try Again\")\r\n        //         //return true\r\n        //     }\r\n        //\r\n        //  }\r\n        // )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n\r\n            <div>\r\n                {this.state.isLoggedIn ?<Redirect\r\n                    to={{\r\n                        pathname: \"/MainPage\",\r\n                        state: { property_id: this.state.userName, property_id1 : this.state.user , property_id2:this.state.id, property_id3:this.state.head , property_id4:this.props.userDetails , property_id5:this.props.posts,property_id7:this.state.isLoggedIn }\r\n                    }}\r\n                /> : null}\r\n                <div id=\"SignInHeading\">\r\n                    <h3 className=\"white-text\">Sign In</h3>\r\n                </div>\r\n                <form\r\n                    id=\"SignInForm\"\r\n                    className=\"needs-validation\"\r\n                    onSubmit={this.submitHandler}\r\n                    noValidate>\r\n\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n\r\n                            <label htmlFor=\"signInUserName\" className=\"white-text\">\r\n                                User Name :\r\n                            </label>\r\n                            <input value={this.state.userName} name=\"userName\" onChange={this.changeHandler} type=\"text\" id=\"signInUserName\" className=\"form-control\" placeholder=\"User name\" required width={40}/>\r\n                            <div className=\"invalid-feedback\">\r\n                                User Not Found, Wanna Register?\r\n                            </div>\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\">\r\n                            <label htmlFor=\"signInPassword\" className=\"white-text\">\r\n                              Password\r\n                            </label>\r\n                            <input value={this.state.password} name=\"password\" onChange={this.changeHandler} type=\"password\" id=\"signInPassword\" className=\"form-control\" placeholder=\"Password\" required width={40}/>\r\n                            <div className=\"invalid-feedback\">\r\n                                Incorrect Password (Check if Caps On!)\r\n                            </div>\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                    <MDBCol md=\"3\"/>\r\n                        <MDBCol md=\"6\">\r\n                    <MDBInput id=\"signInButton\" color=\"primary\" type=\"submit\" value=\"Sign In\" className=\"white-text\">\r\n                        <div className=\"invalid-feedback\">\r\n                            Try Again\r\n                        </div>\r\n                        <div className=\"valid-feedback\">Looks good!</div>\r\n                    </MDBInput>\r\n                    </MDBCol>\r\n                    </MDBRow>\r\n                </form>\r\n                <h3 className=\"white-text\">or</h3>\r\n                <MDBRow>\r\n                    <MDBCol md=\"3\"></MDBCol>\r\n                    <MDBCol md=\"6\">\r\n                   <h1><a href=\"https://parliament-backend.herokuapp.com/auth/google\"><MDBIcon fab icon=\"google\" /></a></h1>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                <MDBRow>\r\n                    <MDBCol md=\"3\"></MDBCol>\r\n                    <MDBCol md=\"6\">\r\n                <h6 className=\"white-text\">Sign In with Your Google Account</h6>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {MDBRow, MDBCol,MDBInput} from \"mdbreact\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nclass FormsPage extends React.Component {\r\n    state = {\r\n        fname: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        zip: \"\",\r\n        confirmpassword:\"\",\r\n        isLoggedIn:false\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n\r\n    }\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n        event.target.className += \" was-validated\";\r\n        this.signIn()\r\n\r\n    };\r\n\r\n    changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n\r\n    };\r\n    signIn = () => {\r\n        this.checkAge();\r\n        this.checkpassword();\r\n        console.log(this.state)\r\n        if(this.state.name != null && this.state.username != null && this.state.password != null && this.state.zip != null && this.state.phone != null && this.state.age != null && this.state.email != null) {\r\n            axios.post('https://parliament-backend.herokuapp.com/register', {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                email : this.state.email,\r\n                dob : this.state.age,\r\n                zipcode : this.state.zip\r\n            }).then((res) => {\r\n                    console.log(this.state.username)\r\n                    console.log(this.state.password)\r\n                    if (res.data.result === \"success\") {\r\n\r\n                        axios.post('https://parliament-backend.herokuapp.com/login', {\r\n                                username: this.state.username,\r\n                                password: this.state.password\r\n                            },\r\n                            {withCredentials: true})\r\n                            .then((res) => {\r\n                                    const result = res.data;\r\n                                    console.log(result)\r\n                                    if (result.result === 'success') {\r\n                                        localStorage.setItem(\"token\", \"loggedIn\")\r\n                                        this.setState({isLoggedIn: true})\r\n                                        console.log(document.cookie)\r\n                                    }\r\n                                },\r\n                                (error) => {\r\n                                    console.log(error);\r\n                                });\r\n                    }\r\n                }\r\n               , (error) => {\r\n                console.log(error);\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n    userLogIn = () => {\r\n        console.log(this.state.username)\r\n        console.log(this.state.password)\r\n        axios.post('https://parliament-backend.herokuapp.com/login', {\r\n            username: this.state.username,\r\n            password: this.state.password },\r\n            {withCredentials: true})\r\n            .then((res) =>{\r\n                const result = res.data;\r\n                console.log(result)\r\n                if (result.result === 'success') {\r\n                    localStorage.setItem(\"token\", \"loggedIn\")\r\n                    this.setState({isLoggedIn: true})\r\n                    console.log(document.cookie)\r\n                }\r\n                },\r\n                (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n   checkAge = () =>\r\n    {\r\n        let currDate = new Date();\r\n        let dob = document.getElementById(\"defaultFormRegisterDOB\");\r\n        //let dob = this.state.age\r\n        let dateOfBirth=new Date(dob.value);\r\n        let difference=currDate-dateOfBirth;\r\n        let age=new Date(difference);\r\n        let ageByYear=age.getFullYear()-1970;\r\n        if(ageByYear<18)\r\n        {\r\n            dob.setCustomValidity(\"Sorry!! You Need to be 18 years or older to register\");\r\n        }\r\n        else{\r\n            dob.setCustomValidity(\"\");\r\n        }\r\n    }\r\n    checkpassword = () => {\r\n        //let password = document.getElementById(\"defaultFormRegisterPassword\");\r\n        let conpassword = document.getElementById(\"defaultFormRegisterConfirmPassword\");\r\n        if (this.state.password === this.state.confirmpassword) {\r\n\r\n        } else {\r\n            conpassword.setCustomValidity(\"Passwords Don't Match\");\r\n        }\r\n    }\r\n   checkUsername = () =>\r\n    {\r\n        let user = document.getElementById(\"username\");\r\n        let userf=user.value.toString()[0];\r\n        let userfb=user.value.toString().substring(1,user.value.toString().length)\r\n        if(userf.match('[0-9]')){\r\n            user.setCustomValidity(\"User Name Cannot begin with number\");\r\n        }\r\n        else if (!(userfb.match(/^[a-zA-Z0-9]+$/)))\r\n        {\r\n            user.setCustomValidity(\"User Name cannot contain Symbols, Only Alphanumerics allowed\");\r\n        }\r\n        else\r\n        {\r\n            user.setCustomValidity(\"\");\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return(\r\n\r\n            <div>\r\n                {this.state.isLoggedIn ? <Redirect\r\n                    to={{\r\n                        pathname: \"/MainPage\",\r\n                        state: { property_id: this.state.name, property_id1 : this.state.username , property_id2:11 , property_id3:\"I'm new here looking for Friends\" , property_id4:this.props.userDetails , property_id5:this.props.posts , property_id8: this.state.zipcode,property_id9: this.state.email , property_id10:this.state.password}\r\n                    }}\r\n                /> :null }\r\n                <div id=\"RegisterHeading\">\r\n                    <h3 className=\"white-text\">Register</h3>\r\n                </div>\r\n                <form\r\n                    className=\"needs-validation\"\r\n                    onSubmit={this.submitHandler}\r\n                    noValidate\r\n                    id=\"registrationForm\"\r\n                >\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <label htmlFor=\"defaultFormRegisterName\" className=\"white-text\">\r\n                                Name :\r\n                            </label>\r\n                            <input value={this.state.name} name=\"name\" onChange={this.changeHandler} type=\"text\" id=\"defaultFormRegisterName\" className=\"form-control\" placeholder=\"Please Enter Your Full Name\" required/>\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"5\">\r\n                            <label htmlFor=\"defaultFormRegisterUserName\" className=\"white-text\">\r\n                                User Name:\r\n                            </label>\r\n                            <input value={this.state.username} name=\"username\" onChange={this.changeHandler} type=\"text\" id=\"defaultFormRegisterUserName\" className=\"form-control\" placeholder=\"Enter User Name\" required size=\"sm\"/>\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <label htmlFor=\"defaultFormRegisterEmail\" className=\"white-text\">\r\n                                Email\r\n                            </label>\r\n                            <input value={this.state.email} onChange={this.changeHandler} type=\"email\" id=\"defaultFormRegisterEmail\" className=\"form-control\" name=\"email\" placeholder=\"Your Email address\" required/>\r\n                            <small id=\"emailHelp\" className=\"form-text white-text\">\r\n                                We'll never share your email with anyone else.\r\n                            </small>\r\n                            <div className=\"invalid-feedback white-text\">\r\n                                Please provide a valid email.Ex.abc@gef.ghi\r\n                            </div>\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"5\">\r\n                        <label htmlFor=\"defaultFormRegisterPhone\" className=\"white-text\">\r\n                            Phone\r\n                        </label>\r\n                        <input value={this.state.phone} onChange={this.changeHandler} type=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"  id=\"defaultFormRegisterPhone\" className=\"form-control\" name=\"phone\" placeholder=\"123-123-1234\" required/>\r\n                        <div className=\"invalid-feedback\">\r\n                            Please provide a valid Phone Number.Format 123-123-1234\r\n                        </div>\r\n                        <div className=\"valid-feedback\">Looks good!</div>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <label htmlFor=\"defaultFormRegisterZip\" className=\"white-text\">\r\n                                Zip Code\r\n                            </label>\r\n                            <input value={this.state.zip} onChange={this.changeHandler} type=\"text\" id=\"defaultFormRegisterZip\" className=\"form-control\" name=\"zip\" placeholder=\"Zip\" pattern=\"[0-9]{5}\" required/>\r\n                            <div className=\"invalid-feedback\">\r\n                                Please provide a valid 5 Digit zip.\r\n                            </div>\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"5\">\r\n                            <label htmlFor=\"defaultFormRegisterDOB\" className=\"white-text\">\r\n                                Date of Birth\r\n                            </label>\r\n                            <input value={this.state.age} onChange={this.changeHandler} type=\"date\" id=\"defaultFormRegisterDOB\" className=\"form-control\" name=\"age\" placeholder=\"Zip\" required/>\r\n                            <div className=\"invalid-feedback\">\r\n                                You Need to older than 18 years\r\n                            </div>\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <label htmlFor=\"defaultFormRegisterPasswordEx4\" className=\"white-text\">\r\n                                Password :\r\n                            </label>\r\n                            <input value={this.state.password} onChange={this.changeHandler} type=\"password\" id=\"defaultFormRegisterPassword\" className=\"form-control\" name=\"password\" placeholder=\"Please create a Password\" required/>\r\n                            <div className=\"invalid-feedback\">\r\n                                Please provide a valid password.\r\n                            </div>\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"5\">\r\n                            <label htmlFor=\"defaultFormRegisterConfirmPassword\" className=\"white-text\">\r\n                               Confirm Password :\r\n                            </label>\r\n                            <input value={this.state.confirmpassword} onChange={this.changeHandler} type=\"password\" id=\"defaultFormRegisterConfirmPassword\" className=\"form-control\" name=\"confirmpassword\" placeholder=\"Please re-enter Password\" pattern={this.state.password} required/>\r\n                            <div className=\"invalid-feedback\">\r\n                                Passwords don't match\r\n                            </div>\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                    <MDBCol md=\"4\">\r\n                        <div className=\"custom-control custom-checkbox white-text\" >\r\n                            <input className=\"custom-control-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required/>\r\n                            <label className=\"custom-control-label\" htmlFor=\"invalidCheck\">\r\n                                Agree to terms and conditions\r\n                            </label>\r\n                            <div className=\"invalid-feedback\">\r\n                                You must agree before submitting.\r\n                            </div>\r\n                        </div>\r\n                    </MDBCol>\r\n                        <MDBCol md=\"7\">\r\n                        <MDBInput color=\"primary\" type=\"submit\" value=\"Register and Sign In\" className=\"white-text\" >\r\n                        </MDBInput>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormsPage;\r\n","import React from \"react\";\r\nimport {SignIn} from \"./signIn\";\r\nimport axios from 'axios';\r\nimport FormsPage from \"./registrationForm\";\r\n\r\n\r\nclass LandingPage extends React.Component {\r\n    state = {\r\n        userName: \"\",\r\n        password: \"\",\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"This was called\")\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n            .then(res => {\r\n                const persons = res.data;\r\n                this.setState({ persons });\r\n                console.log(persons)\r\n            })\r\n        axios.get('https://jsonplaceholder.typicode.com/posts')\r\n            .then(res => {\r\n                const posts = res.data;\r\n                this.setState({ posts });\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"row\" id=\"classicformpage\">\r\n                <div className=\"col-md-1\"/>\r\n                <div id=\"div-sign-in\" className=\"col-md-4\"><SignIn userDetails={this.state.persons} posts={this.state.posts}/>\r\n                </div>\r\n                <div id=\"div-registration\" className=\"col-md-6\"><FormsPage userDetails={this.state.persons} posts={this.state.posts}/></div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\nimport {MDBRow, MDBCol, MDBIcon,MDBInput, MDBCard, MDBCardBody, MDBCardText} from \"mdbreact\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport class ProfilePage extends React.Component {\r\n    state = {\r\n        persons: [],\r\n        ready:false,\r\n        isLoggedIn:false,\r\n        isLinked:false,\r\n        unlinkedSuccessfully:false\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n\r\n    }\r\n    componentDidMount() {\r\n        axios.get('https://parliament-backend.herokuapp.com/linking',{withCredentials:true})\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                if(res.data.result===false) {\r\n                    this.setState({\r\n                        isLinked: false\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        isLinked: true\r\n                    })\r\n                }\r\n            },(error) =>{\r\n            console.log(error)\r\n        });\r\n        axios.get('https://parliament-backend.herokuapp.com/email',{withCredentials:true})\r\n            .then((res) => {\r\n                this.setState({ username:res.data.username,\r\n                    curremail:res.data.email});\r\n                axios.get('https://parliament-backend.herokuapp.com/zipcode',{withCredentials:true})\r\n                    .then((res) => {\r\n                        this.setState({currzipcode:res.data.zipcode,currpassword:\"********\"});\r\n                        axios.get('https://parliament-backend.herokuapp.com/avatar',{withCredentials:true})\r\n                            .then((res) => {\r\n                                console.log(res.data)\r\n                                console.log(res.data.avatar)\r\n                                var myName = res.data.avatar;\r\n                                console.log('\"' + myName + '\"');\r\n                                this.setState({picture:res.data.avatar,currpassword:\"********\",ready:true });\r\n                            }, (error) => {\r\n                                console.log(error);\r\n                            });\r\n                    }, (error) => {\r\n                        console.log(error);\r\n                    });\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    submitHandler = event => {\r\n        //Done for testing purpose\r\n        event.preventDefault();\r\n        // event.target.className += \" was-validated\";\r\n        this.checkIfUpdate();\r\n    };\r\n\r\n    changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    changeHandlerLinking = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    submitHandlerLinking = event => {\r\n        //Done for testing purpose\r\n        event.preventDefault();\r\n        // event.target.className += \" was-validated\";\r\n        axios.post('https://parliament-backend.herokuapp.com/linking', {\r\n            username:this.state.userName,\r\n            password:this.state.password,\r\n            linkusername:this.state.username\r\n        }, {withCredentials: true}).then((res)=>{\r\n\r\n            console.log(res.data);\r\n            if(res.data.result==='success'){\r\n\r\n                console.log(\"accounts linked\")\r\n                axios.post('https://parliament-backend.herokuapp.com/login', {\r\n                    username:this.state.userName,\r\n                    password:this.state.password\r\n                }, {withCredentials: true}).then((res)=>{\r\n                    console.log(\"redirecting to main page\")\r\n                    if(res.data.result==='success'){\r\n                        localStorage.setItem(\"token\",\"loggedIn\")\r\n                        this.setState({ isLoggedIn:true})\r\n                        console.log(document.cookie)\r\n                    }\r\n                })\r\n                //localStorage.setItem(\"token\",\"loggedIn\")\r\n                //this.setState({ isLoggedIn:true})\r\n                //console.log(document.cookie)\r\n            }\r\n        })\r\n    };\r\n\r\n  passwordCoder = (pass) =>{\r\n        var s=\"\";\r\n        for (let k=0;k<pass.length;k++)\r\n        {\r\n            s+='*';\r\n        }\r\n        return s;\r\n    }\r\n    checkIfUpdate = () => {\r\n        console.log(this.state)\r\n        console.log(\"Inside Update Function\");\r\n        if (this.state.curremail !== this.state.email && this.state.email !== undefined && /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/.test(this.state.email))\r\n        {\r\n            //document.getElementById(\"email\").innerHTML = \"Email : \" + this.state.email\r\n            axios.put('https://parliament-backend.herokuapp.com/email',{email:this.state.email},{withCredentials:true})\r\n                .then((res) => {\r\n                    this.setState({curremail:res.data.email});\r\n                }, (error) => {\r\n                    console.log(error);\r\n                });\r\n\r\n        }\r\n        if (this.state.currzipcode !== this.state.zipCode && this.state.zipCode !== undefined && /^[0-9]{5}$/.test(this.state.zipCode) && this.state.zipCode.length===5 )\r\n        {\r\n            //document.getElementById(\"zipcode\").innerHTML = \"Zip Code : \" + this.state.zipCode\r\n            axios.put('https://parliament-backend.herokuapp.com/zipcode',{zipcode:this.state.zipCode},{withCredentials:true})\r\n                .then((res) => {\r\n                    this.setState({ currzipcode:res.data.zipcode});\r\n                }, (error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n        if (this.state.currpassword !== this.state.password && this.state.password !== undefined && this.checkpassword())\r\n        {\r\n            //document.getElementById(\"password\").innerHTML = \"Password is : \" + this.passwordCoder(this.state.password)\r\n            axios.put('https://parliament-backend.herokuapp.com/password',{password:this.state.password},{withCredentials:true})\r\n                .then((res) => {\r\n                    // this.setState({ currzipcode:res.data.zipcode});\r\n                    console.log(\"password updated\")\r\n                }, (error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }\r\n    logoutUser = () =>{\r\n      localStorage.setItem(\"token\",\"\");\r\n      axios.put('https://parliament-backend.herokuapp.com/logout',{user:this.state.userName},{withCredentials:true})\r\n            .then((res) => {\r\n                console.log(res)\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    checkpassword = () => {\r\n        let password = document.getElementById(\"newpassword\");\r\n        let conpassword = document.getElementById(\"connewpassword\");\r\n        if (password.value === conpassword.value) {\r\n            console.log(\"Password matches\");\r\n            return true;\r\n        }\r\n        else {\r\n            conpassword.setCustomValidity(\"Passwords Don't Match\");\r\n            password.setCustomValidity(\"Passwords Don't Match\");\r\n            return false\r\n        }\r\n\r\n    }\r\n    unLinkAccount =()=>{\r\n        axios.post(\"https://parliament-backend.herokuapp.com/unlink\",{username:this.state.username},{withCredentials:true})\r\n            .then((res) => {\r\n                this.setState({\r\n                    unlinkedSuccessfully:true\r\n                })\r\n                //console.log(res.data);\r\n            })\r\n  }\r\n    handleImageChange =(event)=>{\r\n        event.preventDefault();\r\n      console.log(event.target.files[0]);\r\n        const fd = new FormData()\r\n        //fd.append('text', message)\r\n        fd.append(\"image\", event.target.files[0])\r\n        axios.put(\"https://parliament-backend.herokuapp.com/avatar\",fd,{withCredentials:true})\r\n            .then((res) => {\r\n                console.log(res)\r\n                axios.get('https://parliament-backend.herokuapp.com/avatar',{withCredentials:true})\r\n                    .then((res) => {\r\n                        console.log(res.data)\r\n                        console.log(res.data.avatar)\r\n                        var myName = res.data.avatar;\r\n                        console.log('\"' + myName + '\"');\r\n                        this.setState({picture:res.data.avatar});\r\n                    }, (error) => {\r\n                        console.log(error);\r\n                    });\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n           <div id=\"profilePage\">\r\n               <div></div>\r\n               <br/>\r\n               {this.state.ready ?\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-1\"></div>\r\n                       <div className=\"col-md-4\" id=\"userCard\">\r\n                           <MDBCard style={{ width: \"22rem\"}}>\r\n                               <img className=\"img-fluid\" src={String(this.state.picture)} alt={\"User avatar\"}/>\r\n                               <br/>\r\n                               <div className=\"input-group\">\r\n                                   <div className=\"custom-file\">\r\n                                       <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" accept=\"image/*\" onChange={this.handleImageChange}/>\r\n                                       <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                        Choose file\r\n                                       </label>\r\n                                   </div>\r\n                               </div>\r\n                               <MDBCardBody>\r\n                                   <MDBCardText id=\"email\">Email : {this.state.curremail}</MDBCardText>\r\n                                   <MDBCardText id=\"zipcode\">ZipCode : {this.state.currzipcode}</MDBCardText>\r\n                                   <MDBCardText id=\"phone\">Phone Number : {this.state.currphone}</MDBCardText>\r\n                                   <MDBCardText id=\"password\">Password:{this.state.currpassword}</MDBCardText>\r\n                                   <h4><MDBIcon fab icon=\"microsoft\" /><Link to={{pathname: \"/MainPage\"}}><strong> Main Page </strong></Link></h4>\r\n                                   <br/>\r\n                                   <br/>\r\n                                   <h6><MDBIcon icon=\"sign-out-alt\" /><a id=\"logoutBtn\" onClick={this.logoutUser} href={\"/\"}>Logout</a></h6>\r\n                               </MDBCardBody>\r\n                           </MDBCard>\r\n                       </div>\r\n                       <div className=\"col-md-4\" id=\"userUpdates\">\r\n                           <form id=\"profileform\" className=\"needs-validation\" onSubmit={this.submitHandler} noValidate>\r\n                               <MDBRow>\r\n                                       <label htmlFor=\"defaultFormRegisterEmailEx2\" className=\"white-text\">\r\n                                         Update  Zip Code\r\n                                       </label>\r\n                                       <input value={this.state.zipcode} name=\"zipCode\" onChange={this.changeHandler} type=\"text\" id=\"defaultFormRegisterEmailEx2\" pattern=\"[0-9]{5}\" className=\"form-control\" placeholder=\"Enter New ZipCode\"/>\r\n                                       <div className=\"invalid-feedback\">\r\n                                           Please provide a valid 5 Digit zipCode\r\n                                       </div>\r\n                                       <div className=\"valid-feedback\">Looks good!</div>\r\n                               </MDBRow>\r\n                               <MDBRow>\r\n                                       <label htmlFor=\"defaultFormRegisterConfirmEx3\" className=\"white-text\">\r\n                                         Update  Email\r\n                                       </label>\r\n                                       <input value={this.state.email} onChange={this.changeHandler} type=\"email\" id=\"defaultFormRegisterConfirmEx3\" className=\"form-control\" name=\"email\" placeholder=\"Enter New Email address\"/>\r\n                                       <small id=\"emailHelp\" className=\"form-text white-text\">\r\n                                           We'll never share your email with anyone else.\r\n                                       </small>\r\n                                       <div className=\"invalid-feedback\">\r\n                                           Please provide a valid email address in Format abc@efg.hij\r\n                                       </div>\r\n                                       <div className=\"valid-feedback\">Looks good!</div>\r\n                               </MDBRow>\r\n                               <MDBRow>\r\n                                       <label htmlFor=\"newpassword\" className=\"white-text\">\r\n                                        Update Password\r\n                                       </label>\r\n                                       <input value={this.state.password} onChange={this.changeHandler} type=\"password\" id=\"newpassword\" className=\"form-control\" name=\"password\" placeholder=\"Enter New Password\"/>\r\n                               </MDBRow>\r\n                               <MDBRow>\r\n                                       <label htmlFor=\"connewpassword\" className=\"white-text\">\r\n                                           Confirm Password\r\n                                       </label>\r\n                                       <input value={this.state.conpassword} onChange={this.changeHandler} type=\"password\" id=\"connewpassword\" className=\"form-control\" name=\"conpassword\" placeholder=\"Enter New Password\"/>\r\n                                       <div className=\"invalid-feedback\">\r\n                                           Passwords Don't Match\r\n                                       </div>\r\n                                       <div className=\"valid-feedback\">Looks good!</div>\r\n                               </MDBRow>\r\n                               <MDBInput className=\"white-text\" color=\"primary\" type=\"submit\" value=\"Update\">\r\n\r\n                               </MDBInput>\r\n                           </form>\r\n                       </div>\r\n                       {this.state.isLinked ?\r\n                           <div className=\"col-md-3\">\r\n                               <MDBInput className=\"white-text\" icon=\"unlink\" onIconClick={this.unLinkAccount}/>\r\n                               <h3 className=\"white-text\">Un-Link Google Account</h3>\r\n                               <br/>\r\n                               {this.state.unlinkedSuccessfully ? <i className=\"white-text\">Account Unlinked Successfully </i> :null}\r\n                           </div>\r\n                           : \r\n                           <div className=\"col-md-3\">\r\n                                <h4 className=\"white-text\"><MDBIcon icon=\"link\" /> Link User Account </h4>\r\n                               <form\r\n                           id=\"SignInForm\"\r\n                           className=\"needs-validation\"\r\n                           onSubmit={this.submitHandlerLinking}\r\n                           noValidate>\r\n                               <label htmlFor=\"signInUserName\" className=\"white-text\">\r\n                                   User Name :\r\n                               </label>\r\n                               <input value={this.state.userName} name=\"userName\" onChange={this.changeHandlerLinking} type=\"text\" id=\"signInUserName\" className=\"form-control\" placeholder=\"User name\" required width={40}/>\r\n                               <div className=\"invalid-feedback\">\r\n                                   User Not Found, Wanna Register?\r\n                               </div>\r\n                               <div className=\"valid-feedback\">Looks good!</div>\r\n                               <label htmlFor=\"signInPassword\" className=\"white-text\">\r\n                                   Password\r\n                               </label>\r\n                               <input value={this.state.password} name=\"password\" onChange={this.changeHandlerLinking} type=\"password\" id=\"signInPassword\" className=\"form-control\" placeholder=\"Password\" required width={40}/>\r\n                               <div className=\"invalid-feedback\">\r\n                                   Incorrect Password (Check if Caps On!)\r\n                               </div>\r\n                               <div className=\"valid-feedback\">Looks good!</div>\r\n                       <MDBCol md=\"3\"></MDBCol>\r\n                                   <MDBCol md=\"7\">\r\n                           <MDBInput className=\"white-text\" id=\"signInButton\" color=\"primary\" type=\"submit\" value=\"Sign In\">\r\n                               <div className=\"invalid-feedback\">\r\n                                   Try Again\r\n                               </div>\r\n                               <div className=\"valid-feedback\">Looks good!</div>\r\n                           </MDBInput>\r\n                       </MDBCol>\r\n                   </form>\r\n                   </div>}\r\n                   {this.state.isLoggedIn ?<Redirect\r\n                       to={{\r\n                           pathname: \"/MainPage\",\r\n                       }}\r\n                   /> : null}\r\n            </div>  : null}\r\n           </div>\r\n\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport axios from 'axios';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass AuthLandingPage extends React.Component {\r\n    state = {\r\n        userName: \"\",\r\n        password: \"\",\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n\r\n    }\r\n    componentDidMount() {\r\n        let userDetails = (this.props.match.params.id).split('@');\r\n        axios.post('https://parliament-backend.herokuapp.com/register', {\r\n            username: userDetails[0],\r\n            auth:'google'\r\n        }, {withCredentials: true})\r\n            .then((res) => {\r\n\r\n                if (res.data.type==='linked') {\r\n                    axios.post('https://parliament-backend.herokuapp.com/login', {\r\n                        username: res.data.username,\r\n                        type:'linked'\r\n                    }, {withCredentials: true}).then((res) => {\r\n                        console.log(\"Inside the exisiting user If:\"+res.data)\r\n                        if (res.data.result === 'success') {\r\n                            localStorage.setItem(\"token\", \"loggedIn\")\r\n                            this.setState({isLoggedIn: true})\r\n                            console.log(document.cookie)\r\n                        }\r\n                    })\r\n                } else {\r\n                    axios.post('https://parliament-backend.herokuapp.com/login', {\r\n                        username: userDetails[0],\r\n                        password: \"\",\r\n                        type: 'google'\r\n                    }, {withCredentials: true}).then((res) => {\r\n                        console.log(\"Inside the not exisiting user else:\"+res.data.result)\r\n                        if (res.data.result === 'success') {\r\n                            localStorage.setItem(\"token\", \"loggedIn\")\r\n                            this.setState({isLoggedIn: true})\r\n                            console.log(document.cookie)\r\n                        }\r\n                    })\r\n                }\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    googleLogin = () => {\r\n        axios.post('https://parliament-backend.herokuapp.com/register', {\r\n            username: this.props.match.params.id\r\n        }, {withCredentials: true})\r\n            .then((res) => {\r\n                console.log(document.cookie)\r\n                console.log(res);\r\n                const result = res.data;\r\n                axios.post('https://parliament-backend.herokuapp.com/login', {\r\n                    username:this.props.match.params.id,\r\n                    password:\"\",\r\n                    type:'google'\r\n                }, {withCredentials: true}).then((res)=>{\r\n\r\n                    if(result.result==='success'){\r\n                        localStorage.setItem(\"token\",\"loggedIn\")\r\n                        this.setState({ isLoggedIn:true})\r\n                        console.log(document.cookie)\r\n                    }\r\n                })\r\n                //this.setState({ persons });\r\n                //console.log(persons)\r\n                console.log(res)\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-1\">\r\n                Welcome to Parliament\r\n                    {this.state.isLoggedIn ?<Redirect\r\n                        to={{\r\n                            pathname: \"/MainPage\",\r\n                        }}\r\n                    /> : null}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthLandingPage;\r\n","import React, { Component } from \"react\";\r\nimport {MDBNavbar, MDBNavbarBrand,MDBNavbarToggler} from \"mdbreact\";\r\n\r\nclass NavbarPage extends Component {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <MDBNavbar color=\"indigo\" dark expand=\"lg\">\r\n                    <MDBNavbarBrand>\r\n                       <center> <strong className=\"white-text\" >Parliament - <small><i> Social Media Platform For the Owls, By the Owls and From the Owls </i> </small> </strong></center>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                </MDBNavbar>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarPage;","import './App.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport {BrowserRouter as Router,Route, Switch} from 'react-router-dom';\nimport LandingPage from \"./Components/LandingPage/landingPage\";\nimport MainPage from \"./Components/MainPage/MainPage\";\nimport {ProfilePage} from \"./Components/ProfilePage/profilePage\";\nimport AuthLandingPage from \"./Components/LandingPage/AuthLandingPage\";\nimport NavbarPage from \"./Components/LandingPage/NavBar\";\nimport React from \"react\";\n\n\nfunction App() {\n\n    return (\n    <div className=\"App\">\n        <NavbarPage/>\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                  <LandingPage />\n                </Route>\n                <Route exact path={\"/MainPage\"} render={(props) => <MainPage {...props} key={props.match.params.id} />}/>\n                <Route exact path={\"/ProfilePage\"} render={(props) => <ProfilePage {...props} key={props.match.params.id} />}/>\n                <Route exact path={\"/AuthLandingPage/:id\"} render={(props) => <AuthLandingPage {...props} key={props.match.params.id} />}/>\n            </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}